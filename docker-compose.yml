version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper

  clickhouse-node1:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./etl_ugc/data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./etl_ugc/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./etl_ugc/data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./etl_ugc/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

  etl-ugc:
    build:
      context: ./etl_ugc
      dockerfile: Dockerfile
    container_name: etl-ugc
    depends_on:
      - kafka
      - zookeeper
    env_file:
      - .env
    restart: always

  ugc-service:
    build:
      context: ./ugc_service
      dockerfile: Dockerfile
    container_name: ugc-services
    depends_on:
      - kafka
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: always
